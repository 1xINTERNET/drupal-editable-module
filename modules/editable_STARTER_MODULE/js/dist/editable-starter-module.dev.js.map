{"version":3,"sources":["webpack://EditableStarterModule/webpack/universalModuleDefinition","webpack://EditableStarterModule/webpack/bootstrap","webpack://EditableStarterModule/./src/components/ExampleComponent.js","webpack://EditableStarterModule/./src/components/index.js","webpack://EditableStarterModule/./src/index.js","webpack://EditableStarterModule/external \"Editable_Core\"","webpack://EditableStarterModule/external \"PropTypes\"","webpack://EditableStarterModule/external \"React\"","webpack://EditableStarterModule/external \"ReactDOM\""],"names":["styles","container","css","ExampleComponent","props","store","data","loading","error","get","getData","change","save","saving","handleChange","propTypes","type","PropTypes","string","isRequired","bundle","uuid","object","$","window","Drupal","behaviors","initialise_starter_module_block","attach","context","find","once","each","eachEditableStarterBlockFn","mountPoint","Error","JSON","parse","dataset","editableProps","e","Editable_Registry","addInitHook","ReactDOM","render","jQuery"],"mappings":"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","file":"editable-starter-module.dev.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Editable_Core\"), require(\"PropTypes\"), require(\"React\"), require(\"ReactDOM\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Editable_Core\", \"PropTypes\", \"React\", \"ReactDOM\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EditableStarterModule\"] = factory(require(\"Editable_Core\"), require(\"PropTypes\"), require(\"React\"), require(\"ReactDOM\"));\n\telse\n\t\troot[\"EditableStarterModule\"] = factory(root[\"Editable_Core\"], root[\"PropTypes\"], root[\"React\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__drupal_editable_core__, __WEBPACK_EXTERNAL_MODULE_prop_types__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// ALL of these dependencies are taken from the editable_core JS library and not\n// part of this bundle.\nimport React from \"react\";\n// PropTypes will only be included in the development build.\nimport PropTypes from \"prop-types\";\nimport {\n  Query,\n  EditableEntity,\n  EditableEntityForm,\n  Provider,\n  get,\n  css\n} from \"@drupal-editable/core\";\n\n// Editable includes and exposes the emotion library for CSS-in-JS styling. You\n// can also apply normal CSS classes to elements.\n// See https://emotion.sh/ for more information.\nconst styles = {\n  container: css`\n    background: #eee;\n    padding: 1em;\n    margin-top: 2em;\n    margin-bottom: 2em;\n  `\n};\n\nconst ExampleComponent = props => (\n  // eslint-disable-next-line react/destructuring-assignment\n  <Provider store={props.store}>\n    <Query {...props}>\n      {({ data, loading, error }) => (\n        <div className={styles.container}>\n          {loading && <strong>Loading â€¦</strong>}\n          {error && <strong>There was an error loading!</strong>}\n          {/* Rendering data, data contains the whole entity data. */}\n          {data && (\n            <div>\n              <h3>Simply rendering data with Query</h3>\n              <div>The current node title is:</div>\n              {/*\n                Editable includes and exposes lodash.get as get, this is useful\n                for these scenarios.\n              */}\n              <div>{get(data, \"attributes.title\")}</div>\n              {/*\n                Pass the entity data to EditableEntity as a prop.\n                EditableEntity will handle saving the data.\n              */}\n              <EditableEntity data={data}>\n                {({ getData, change, save, saving }) => (\n                  <div>\n                    {/*\n                      Within EditableEntity we need to use the getData and\n                      getAllData getter functions to get the entity data with\n                      changes. (Prefer getData as getAllData is quite expensive)\n\n                      Saving is either false or an array of property paths which\n                      are currently being saved.\n                    */}\n                    {saving && <strong>Currently saving â€¦</strong>}\n                    <h3>Changing data with EditableEntity</h3>\n                    <p>\n                      The currently locally cached change is:\n                      {` ${getData(\"attributes.title\")}`}\n                    </p>\n                    <EditableEntityForm save={save} change={change}>\n                      {({ handleChange }) => (\n                        /*\n                          handleChange uses the data-prop-path attribute to\n                          determine which field was changed. This is just syntactic\n                          sugar around the change function.\n                        */\n                        <input\n                          type=\"text\"\n                          value={getData(\"attributes.title\")}\n                          data-prop-path=\"attributes.title\"\n                          onChange={handleChange}\n                        />\n                      )}\n                    </EditableEntityForm>\n                    <button type=\"submit\" onClick={save}>\n                      Save!\n                    </button>\n                  </div>\n                )}\n              </EditableEntity>\n            </div>\n          )}\n        </div>\n      )}\n    </Query>\n  </Provider>\n);\n\nExampleComponent.propTypes = {\n  type: PropTypes.string.isRequired,\n  bundle: PropTypes.string.isRequired,\n  uuid: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  store: PropTypes.object.isRequired\n};\n\nexport { ExampleComponent };\n","export * from \"./ExampleComponent.js\";\n","// These dependencies are taken from the window object and are not part of the\n// resulting bundle.\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ExampleComponent } from \"./components\";\n\n(($, window, Drupal) => {\n  Drupal.behaviors.initialise_starter_module_block = {\n    attach(context) {\n      $(context)\n        .find(\"#block-editablestarterblock\")\n        .once(\"initialise-starter-module-block\")\n        .each(function eachEditableStarterBlockFn() {\n          const mountPoint = $(this).get(0);\n          if (!mountPoint) {\n            throw new Error(\"DOM element to mount React component not found!\");\n          }\n\n          // Try and get the props to mount our React component by parsing the data\n          // attribute. You could also use the drupalSettings JS object or some other form\n          // of input, like an AJAX call.\n          let props;\n          try {\n            props = JSON.parse(mountPoint.dataset.editableProps);\n          } catch (e) {\n            throw new Error(\n              \"data-editable-props attribute was not found on the mountpoint!\"\n            );\n          }\n\n          window.Editable_Registry.addInitHook(store => {\n            // The spread syntax will result in the props being applied as though we had\n            // written: <ExampleComponent type={type} bundle={bundle} uuid={uuid} />\n            ReactDOM.render(\n              <ExampleComponent {...props} store={store} />,\n              mountPoint\n            );\n          });\n        });\n    }\n  };\n})(jQuery, window, Drupal);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__drupal_editable_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_prop_types__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;"],"sourceRoot":""}